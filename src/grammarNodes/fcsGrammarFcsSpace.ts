import { GrammarKind, GrammarType } from "../fcsGrammar";

export const fcsSpaceGrammarNodes = [

    new GrammarType({ dot: 0, key: "Fcs", kind: GrammarKind.Module }),

    new GrammarType({ dot: 1, key: "Fcs.Geometry", kind: GrammarKind.Module }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.Tools", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Tools.GetLinesIntersection", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Tools.GetLinesIntersection2", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Tools.CreateDefaultLcsByTwoPoints", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Tools.CreateDefaultLcsByTwoPointsAndZ", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Tools.CreateDefaultMatrixByVectorX", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Tools.AreVectorsParallelTol", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Tools.AreVectorsPerpendicularTol", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Tools.MeasureLoopSubspaceDimension", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.Intersection", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Intersection.Lines", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Intersection.Lines2", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Intersection.LineAndPlane", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Intersection.PointAndArea", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Intersection.CutManyCurves", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Intersection.CutManyCurvesToOneList", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.Buffered", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Buffered.Parse", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Buffered.ParseCurveIdsArray", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Buffered.CompositeToBufferedGeometry", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Buffered.Merge", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Buffered.MergeWithOptions", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Buffered.MergeOptions", kind: GrammarKind.Module }),
    new GrammarType({ dot: 4, key: "Fcs.Geometry.Buffered.MergeOptions.Default", kind: GrammarKind.Function }),
    new GrammarType({ dot: 4, key: "Fcs.Geometry.Buffered.MergeOptions.BufferGen", kind: GrammarKind.Function }),
    new GrammarType({ dot: 4, key: "Fcs.Geometry.Buffered.MergeOptions.ToComposite", kind: GrammarKind.Function }),
    new GrammarType({ dot: 4, key: "Fcs.Geometry.Buffered.MergeOptions.NoMerge", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Buffered.StitchCurves", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Buffered.SeamCutCurves", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Buffered.StitchManyCurvesToPolylines", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Buffered.DeleteCurves", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Buffered.DeleteAreas", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Buffered.Loopize", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Buffered.DeLoopize", kind: GrammarKind.Function }),

    new GrammarType({ dot: 3, key: "Fcs.Geometry.Buffered.VertexId", kind: GrammarKind.Module }),
    new GrammarType({ dot: 4, key: "Fcs.Geometry.Buffered.VertexId.Empty", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Geometry.Buffered.VertexId.New", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Buffered.CurveId", kind: GrammarKind.Module }),
    new GrammarType({ dot: 4, key: "Fcs.Geometry.Buffered.CurveId.Empty", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Geometry.Buffered.CurveId.New", kind: GrammarKind.Function }),
    new GrammarType({ dot: 4, key: "Fcs.Geometry.Buffered.CurveId.NewCode", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Buffered.LoopId", kind: GrammarKind.Module }),
    new GrammarType({ dot: 4, key: "Fcs.Geometry.Buffered.LoopId.Empty", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Geometry.Buffered.LoopId.New", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Buffered.AreaId", kind: GrammarKind.Module }),
    new GrammarType({ dot: 4, key: "Fcs.Geometry.Buffered.AreaId.Empty", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Geometry.Buffered.AreaId.New", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Buffered.SolidId", kind: GrammarKind.Module }),
    new GrammarType({ dot: 4, key: "Fcs.Geometry.Buffered.SolidId.Empty", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Geometry.Buffered.SolidId.New", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.Constrained", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Constrained.SolveProblem", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Constrained.ConstraintEnforcedDof", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Constrained.ConstraintEnforcedDofWeak", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Constrained.ConstraintWeightedDof", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Constrained.ConstraintVertexDiffProjection", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Constrained.ConstraintKeepVertexPosition", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Constrained.ConstraintKeepVertexPositionWeak", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Constrained.ConstraintKeepCurveDirection", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Constrained.ConstraintSetCurveDirection", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Constrained.ConstraintKeepAreaNormal", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Constrained.ConstraintSetAreaNormal", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Constrained.ConstraintKeepAreaAffine", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Constrained.ConstraintKeepAreaAffineDirection", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Constrained.NonlinearConstraintKeepAreaPlannar", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Constrained.NonlinearConstraintSetCurveLength", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.Features", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Features.FeatureSolver", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.Vertex3D", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Geometry.Point3D", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Geometry.Vector3D", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.Measure", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Measure.OrientedAngleOfVectors", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Measure.PositiveOrientedAngleOfVectors", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Measure.AngleOfVectors", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Measure.DistanceOfPoints", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Measure.DistanceOfPointFromPlane", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Measure.AreaInternalPointXY", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Measure.DistanceOfPointFromPlane", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.Lcs", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.LoopCurve", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.LoopCurve.Backward", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.LoopCurve.Forward", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.LoopCurve.Orient", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.Matrix33", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Geometry.BoundingBox", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.Boolean2D", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Boolean2D.Subtract", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Boolean2D.Intersect", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Boolean2D.Add", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Boolean2D.SubtractMany", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Boolean2D.SubtractManyBpt", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Boolean2D.IntersectMany", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Boolean2D.IntersectManyBpt", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Boolean2D.AddMany", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Boolean2D.AddManyBpt", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Boolean2D.AddManyFix", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Boolean2D.CurvesIntersectAreas", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Boolean2D.CurvesSubtractAreas", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.Offset2D", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Offset2D.LoopToLoopsOffset", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Offset2D.LoopToLoopsOffsets", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Offset2D.LoopToAreasOffset", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Offset2D.LoopToAreasOffsets", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.Discrete", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Discrete.FilterArea", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Discrete.FilterSection", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.Area", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Geometry.Patch", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Geometry.FilletedPoly", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Geometry.Loop", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.Curves", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Curves.CurveUse", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Curves.Line", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.Solids", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Geometry.Solids.MergeSurfaces", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.Composite", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.GetSolidCurves", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Geometry.GetSolidAreas", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Geometry.GetSuperficieCurves", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.GetAllAreas", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Geometry.GetAllSolids", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Geometry.GetAllSolidAreas", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Geometry.ConvexSubspace", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Geometry.Plane", kind: GrammarKind.Function }),


    new GrammarType({ dot: 1, key: "Fcs.Drawing", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Drawing.Rgb", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Drawing.Argb", kind: GrammarKind.Function }),


    new GrammarType({ dot: 1, key: "Fcs.Data", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Data.PointX", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Data.ValueY", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Data.Pair", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Data.Regression", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Data.Regression.TrainModelZero", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Data.Regression.TrainModelConstant", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Data.Regression.TrainModelLinear", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Data.Regression.TrainModelQuadratic", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Data.Regression.TrainModelRadialBase", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Data.Regression.TrainModelRadialBase", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Data.Regression.TrainModelRadialBaseExt", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Data.Regression.TrainModelRadialBaseExt", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Data.Regression.TrainModelPolynomWithRadialBase", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Data.Regression.TrainModelPolynomWithRadialBase", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Data.Regression.TrainModelPolynomWithRadialBase", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Data.Regression.TrainModelPolynomWithRadialBaseExt", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Data.Regression.TrainModelPolynomWithRadialBaseExt", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Data.Regression.GetOrAddCachedModel", kind: GrammarKind.Function }),
    

    new GrammarType({ dot: 1, key: "Fcs.Code", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Code.EC_1991_1_4_UKNA_WindCoefFunction", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Code.EC_1991_1_4_UKNA_WindCoefFunctionLog", kind: GrammarKind.Function }),

    
    new GrammarType({ dot: 1, key: "Fcs.DrawFilter", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.DrawFilter.ContainsStyleAttribute", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.DrawFilter.GetNames", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.DrawFilter.ContainsSomeOfStyleAttributes", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.DrawFilter.ContainsAllOfStyleAttributes", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.DrawFilter.ContainsNoneOfStyleAttributes", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.DrawFilter.IsLayerName", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.DrawFilter.IsSomeOfLayerNames", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.DrawFilter.ContainsNoneOfStyleAttributes", kind: GrammarKind.Function }),


    new GrammarType({ dot: 1, key: "Fcs.EngineeringQuantity", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.List", description: "list all engineering quantities" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Coefficient", description: "coefficient [-]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Factor", description: "factor [-]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Multiplier", description: "multiplier [-]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.FactorPerLength", description: "factor per length [1/m]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.FactorPerArea", description: "factor per area [1/m²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.StructureSlope", description: "structural slope [-]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.StructureAngle", description: "structural angle [-]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Slope", description: "slope [-]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Angle", description: "angle [-]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.CrossSectionAngle", description: "cross section angle [-]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Length", description: "length [m]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Area", description: "area [m²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Volume", description: "volume [m³]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.StructureLength", description: "structural length [m]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.DoorLength", description: "door length [m]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.CrossSectionLength", description: "cross section length [m]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.CrossSectionArea", description: "cross section area [m²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.CrossSectionModulus", description: "cross section modulus [m³]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.CrossSectionInertia", description: "cross section inertia [m⁴]" }),
    new GrammarType({
        dot: 2, key: "Fcs.EngineeringQuantity.CrossSectionWarpInertia",
        description: "cross section inertia in warping [m⁶]"
    }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Force", description: "force [kgm/s²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.BeamInternalForce", description: "beam internal force [kgm/s²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.BeamBendingMoment", description: "beam bending moment [kgm²/s²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.ShellInternalForce", description: "shell internal force [kg/s²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.ShellBendingMoment", description: "shell bending moment [kgm/s²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.LoadForce", description: "load force [kgm/s²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.LoadMoment", description: "load moment [kgm²/s²]" }),
    new GrammarType({
        dot: 2, key: "Fcs.EngineeringQuantity.LoadForcePerLength",
        description: "load force per length intensity [kg/s²]"
    }),
    new GrammarType({
        dot: 2, key: "Fcs.EngineeringQuantity.LoadMomentPerLength",
        description: "load moment per length intensity [kgm/s²]"
    }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.LoadForcePerArea", description: "load force per area intensity [kg/ms²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.MassDensity", description: "volumetric mass density [kg/m³]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Mass", description: "mass [kg]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Speed", description: "speed [m/s]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Velocity", description: "velocity [m/s]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Acceleration", description: "acceleration [m/s²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.SpecificWeight", description: "specific weight [kg/m²s²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Pressure", description: "pressure [kg/ms²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Stress", description: "stress [kg/ms²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.MaterialStrength", description: "material strenght [kg/ms²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.MaterialYieldLimit", description: "material yield strenght [kg/ms²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.MaterialUltimateLimit", description: "material ultimate strenght [kg/ms²]" }),
    new GrammarType({
        dot: 2, key: "Fcs.EngineeringQuantity.MaterialElasticModulus",
        description: "material modulus of elasticity [kg/ms²]"
    }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Time", description: "time [s]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.ConcreteAge", description: "concrete age [s]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Displacement", description: "displacement [m]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Rotation", description: "rotation [-]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.DeformationTorque", description: "torque deformation [1/m]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Curvature", description: "curvature [1/m]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.DeformationEnergy", description: "deformation energy [kgm²/s²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.EnergyDensity", description: "energy density [kg/ms²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.DeformationStrain", description: "strain [-]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.FluidVelocity", description: "fluid velocity [m/s]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.FluidVorticity", description: "fluid vorticity [1/s]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.FluidPressure", description: "fluid pressure [kg/ms²]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.Temperature", description: "temperature [K]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.HeatFlux", description: "heat flux [kg/s³})]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.KinematicViscosity", description: "kinematic viscosity [m²/s})]" }),
    new GrammarType({ dot: 2, key: "Fcs.EngineeringQuantity.DynamicViscosity", description: "dynamic viscosity [Pa/s})]" }),


    new GrammarType({ dot: 1, key: "Fcs.Reporting", kind: GrammarKind.Module }),

    new GrammarType({ dot: 2, key: "Fcs.Reporting.Setup", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Reporting.Setup.Default", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 3, key: "Fcs.Reporting.Setup.DefaultSteel", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 3, key: "Fcs.Reporting.Setup.DefaultSI", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 3, key: "Fcs.Reporting.Setup.DefaultImperialUS", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 3, key: "Fcs.Reporting.Setup.DefaulHtmlSI", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 3, key: "Fcs.Reporting.Setup.DefaulHtmlSteel", kind: GrammarKind.Constant }),

    new GrammarType({ dot: 2, key: "Fcs.Reporting.Chapter", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Reporting.Document", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Reporting.Paragraph", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Reporting.LocalizedText", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Reporting.Text", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Reporting.Html", kind: GrammarKind.Function }),
    // new GrammarType({ dot: 2, key: "Fcs.Reporting.Formula", kind: GrammarKind.Function }),
    // new GrammarType({ dot: 2, key: "Fcs.Reporting.CascadingCheck", kind: GrammarKind.Function }),
    // new GrammarType({ dot: 2, key: "Fcs.Reporting.CheckBlock", kind: GrammarKind.Function }),
    // new GrammarType({ dot: 2, key: "Fcs.Reporting.UnityCheckSection", kind: GrammarKind.Function }),
    // new GrammarType({ dot: 2, key: "Fcs.Reporting.Block", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Reporting.Table", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Reporting.Table.Row", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Reporting.Symbol", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Reporting.Image", kind: GrammarKind.Object }),

    new GrammarType({ dot: 2, key: "Fcs.Reporting.ContentDefinition", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Reporting.ContentDefinition.Document", kind: GrammarKind.Object }),
    new GrammarType({ dot: 4, key: "Fcs.Reporting.ContentDefinition.Document.Types", kind: GrammarKind.Module }),
    new GrammarType({ dot: 5, key: "Fcs.Reporting.ContentDefinition.Document.Types.Html", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Reporting.ContentDefinition.Document.Types.Docx", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Reporting.ContentDefinition.Document.Types.Xlsx", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Reporting.ContentDefinition.Document.Types.Rtf", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Reporting.ContentDefinition.Document.Types.Ifc", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Reporting.ContentDefinition.Document.Types.Txt", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Reporting.ContentDefinition.Document.Types.DocxPdf", kind: GrammarKind.Constant }),
    
    new GrammarType({ dot: 3, key: "Fcs.Reporting.ContentDefinition.Image", kind: GrammarKind.Object }),
    new GrammarType({ dot: 4, key: "Fcs.Reporting.ContentDefinition.Image.Types", kind: GrammarKind.Module }),
    new GrammarType({ dot: 5, key: "Fcs.Reporting.ContentDefinition.Image.Types.Png", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Reporting.ContentDefinition.Image.Types.Svg", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Reporting.ContentDefinition.Image.Types.Dxf", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Reporting.ContentDefinition.Image.Types.Pdf", kind: GrammarKind.Constant }),

    new GrammarType({ dot: 3, key: "Fcs.Reporting.ContentDefinition.File", kind: GrammarKind.Object }),

    new GrammarType({ dot: 3, key: "Fcs.Reporting.ContentDefinition.Archive", kind: GrammarKind.Object }),
    new GrammarType({ dot: 4, key: "Fcs.Reporting.ContentDefinition.Archive.Types", kind: GrammarKind.Module }),
    new GrammarType({ dot: 5, key: "Fcs.Reporting.ContentDefinition.Archive.Types.Zip", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Reporting.ContentDefinition.Archive.Types.Pdf", kind: GrammarKind.Constant }),

    new GrammarType({ dot: 3, key: "Fcs.Reporting.ContentDefinition.Merge", kind: GrammarKind.Object }),
    new GrammarType({ dot: 4, key: "Fcs.Reporting.ContentDefinition.Merge.Types", kind: GrammarKind.Module }),
    new GrammarType({ dot: 5, key: "Fcs.Reporting.ContentDefinition.Merge.Types.Docx", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Reporting.ContentDefinition.Merge.Types.Xlsx", kind: GrammarKind.Constant }),
    
    new GrammarType({ dot: 3, key: "Fcs.Reporting.ContentDefinition.Object", kind: GrammarKind.Object }),
    new GrammarType({ dot: 4, key: "Fcs.Reporting.ContentDefinition.Object.Types", kind: GrammarKind.Module }),
    new GrammarType({ dot: 5, key: "Fcs.Reporting.ContentDefinition.Object.Types.Json", kind: GrammarKind.Constant }),
    
    new GrammarType({ dot: 3, key: "Fcs.Reporting.ContentDefinition.Collage", kind: GrammarKind.Object }),
    new GrammarType({ dot: 4, key: "Fcs.Reporting.ContentDefinition.Collage.Types", kind: GrammarKind.Module }),
    new GrammarType({ dot: 5, key: "Fcs.Reporting.ContentDefinition.Collage.Types.Pdf", kind: GrammarKind.Constant }),

    new GrammarType({ dot: 3, key: "Fcs.Reporting.ContentDefinition.ImageSize", kind: GrammarKind.Module }),
    new GrammarType({ dot: 4, key: "Fcs.Reporting.ContentDefinition.ImageSize.InCm", kind: GrammarKind.Function }),
    new GrammarType({ dot: 4, key: "Fcs.Reporting.ContentDefinition.ImageSize.InPoint", kind: GrammarKind.Function }),
    new GrammarType({ dot: 4, key: "Fcs.Reporting.ContentDefinition.ImageSize.InInch", kind: GrammarKind.Function }),
    new GrammarType({ dot: 4, key: "Fcs.Reporting.ContentDefinition.ImageSize.InPixel", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Reporting.FileEntry", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Reporting.Archive", kind: GrammarKind.Object }),

    new GrammarType({ dot: 2, key: "Fcs.Reporting.Merge", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Reporting.Merge.Template", kind: GrammarKind.Object }),
    new GrammarType({ dot: 3, key: "Fcs.Reporting.Merge.Value", kind: GrammarKind.Object }),
    new GrammarType({ dot: 3, key: "Fcs.Reporting.Merge.Image", kind: GrammarKind.Object }),
    new GrammarType({ dot: 3, key: "Fcs.Reporting.Merge.Table", kind: GrammarKind.Object }),

    new GrammarType({ dot: 2, key: "Fcs.Reporting.Collage", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Reporting.Collage.Canvas", kind: GrammarKind.Object }),
    new GrammarType({ dot: 3, key: "Fcs.Reporting.Collage.Item", kind: GrammarKind.Object }),


    new GrammarType({ dot: 1, key: "Fcs.Units", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Units.Setup", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Units.DefaultSI", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.Units.DefaultFEM", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.Units.DefaultSteel", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.Units.DefaultImperialUS", kind: GrammarKind.Constant }),


    new GrammarType({ dot: 1, key: "Fcs.Math", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Math.PI", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.Math.E", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.Math.ToInteger", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Math.CylinderFieldBiCubicResamplingAndInterpolation", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Math.CylinderFieldBiCubic", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Math.Interval", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Math.IntervalSet", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Math.Subtraction", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Math.Interval1D", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Math.Interval1D.Union", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Math.Interval1D.Intersection", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Math.Interval1D.IsEmptyInterval", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Math.Interval1D.Empty", kind: GrammarKind.Constant }),


    new GrammarType({ dot: 1, key: "Fcs.Symbol", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Abs", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Acos", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Acotan", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.And", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Asin", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Atan", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Atan2", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Between", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Brace", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Case", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Ceil", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Conditional", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Constant", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Cos", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Cosh", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Cot", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Coth", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Equal", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Exp", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Floor", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Function", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Greater", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.GreaterOrEqual", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Less", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.LessOrEqual", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Log", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Log10", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Match", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Max", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Min", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Or", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Pow", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Round", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Sin", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Sinh", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Sqrt", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Switch", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Tan", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Tanh", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Undefined", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.Symbol.Variable", kind: GrammarKind.Function }),


    new GrammarType({ dot: 1, key: "Fcs.Profiling", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Profiling.StartExpressionProfiler", kind: GrammarKind.FunctionEmpty }),
    new GrammarType({ dot: 2, key: "Fcs.Profiling.StopExpressionProfiler", kind: GrammarKind.FunctionEmpty }),


    new GrammarType({ dot: 1, key: "Fcs.Parameter", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Parameter.ItemClass", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.Parameter.ItemDouble", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Parameter.ItemString", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Parameter.ItemInteger", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Parameter.ItemBoolean", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Parameter.ItemList", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Parameter.ItemGallery", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Parameter.ItemArray", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Parameter.ItemAction", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Parameter.ItemComment", kind: GrammarKind.Constant }),
    
    new GrammarType({ dot: 2, key: "Fcs.Parameter.ListType", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Parameter.ListTypeOption", kind: GrammarKind.Object }),
    // new GrammarType({ dot: 2, key: "Fcs.Parameter.ListTypeIdentifier", kind: GrammarKind.Object }),
    // new GrammarType({ dot: 2, key: "Fcs.Parameter.ClassType", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Parameter.GalleryDataSource", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Parameter.GallerySettingsSource", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Parameter.GallerySettings", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Parameter.GalleryCategory", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Parameter.GalleryCategoryLink", kind: GrammarKind.Object }),


    new GrammarType({ dot: 1, key: "Fcs.Definition", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Definition.CmpMapEntry", kind: GrammarKind.Object }),
    

    new GrammarType({ dot: 1, key: "Fcs.Navigation", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Navigation.Item", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Navigation.Badge", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Navigation.UpdaterValue", kind: GrammarKind.Function }),


    new GrammarType({ dot: 1, key: "Fcs.Object", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Object.HasProperty", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Object.IsNullOrEmpty", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Object.HasPropertyValue", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Object.HasPropertyChainValue", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Object.FindPropertyChainValue", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Object.FindProperty", kind: GrammarKind.Function }),


    new GrammarType({ dot: 1, key: "Fcs.Converters", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Converters.IntegerToRomanic", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Converters.ByteArrayToBase64", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Converters.StringToMd5Hash", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Converters.FormatObjectToMd5Hash", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Converters.FormatObjectToxxHash", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Converters.FormatObjectStringlyToxxHash", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Converters.ToSequence", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Converters.ToArray", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Converters.ToJson", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Converters.ParseJson", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Converters.TryParseJson", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Converters.ToInt", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Converters.TryParseJson", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Converters.EnumerableRange", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Converters.SequenceToStringMultiline", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Converters.SequenceToString", kind: GrammarKind.Function }),


    new GrammarType({ dot: 1, key: "Fcs.Exception", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Exception.Throw", kind: GrammarKind.Function }),
    

    new GrammarType({ dot: 1, key: "Fcs.Diagnostics", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Diagnostics.TestSuite", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Diagnostics.Test", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Diagnostics.Format", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Diagnostics.Clock", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Diagnostics.Clock2", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Diagnostics.TraceDepth", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Diagnostics.TraceDepth.None", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 3, key: "Fcs.Diagnostics.TraceDepth.Firm", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 3, key: "Fcs.Diagnostics.TraceDepth.Info", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 3, key: "Fcs.Diagnostics.TraceDepth.Trace", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 3, key: "Fcs.Diagnostics.TraceDepth.Debug", kind: GrammarKind.Constant }),
    
    new GrammarType({ dot: 2, key: "Fcs.Diagnostics.DebugDumpGeometry", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Diagnostics.Sleep", kind: GrammarKind.Function }),


    new GrammarType({ dot: 1, key: "Fcs.Assembly", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.Collector", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.BucketDefinition", kind: GrammarKind.Object }),

    new GrammarType({ dot: 2, key: "Fcs.Assembly.All", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.AllMembers", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.AllBeams", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.AllShells", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.AllVertexSupports", kind: GrammarKind.Constant }),

    new GrammarType({ dot: 2, key: "Fcs.Assembly.ByName", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.BeamByName", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.BeamByPath", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.BeamNameAndRelativeInterval", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.BeamNameAndAbsoluteInterval", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.BeamsWithCrossSectionName", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.BeamsByLayer", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.ShellsByLayer", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.BeamsInLayer", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.ShellsInLayer", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.MembersInLayer", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.MembersInLayers", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.Union", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.BeamsInLayers", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Assembly.ShellsInLayers", kind: GrammarKind.Function }),


    new GrammarType({ dot: 1, key: "Fcs.Mesh", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Mesh.ConnectRules", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Mesh.ConnectRules.ConnectClub", kind: GrammarKind.Object }),
    new GrammarType({ dot: 3, key: "Fcs.Mesh.ConnectRules.WeldNodes", kind: GrammarKind.Object }),
    new GrammarType({ dot: 3, key: "Fcs.Mesh.ConnectRules.HangingNodes", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Mesh.Element", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Mesh.Element.Quadrilateral", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 3, key: "Fcs.Mesh.Element.TrianglePair", kind: GrammarKind.Constant }),


    new GrammarType({ dot: 1, key: "Fcs.Catalog", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Catalog.RemoteClient", kind: GrammarKind.Object }),


    new GrammarType({ dot: 1, key: "Fcs.Web", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Web.RestClient", kind: GrammarKind.Object }),


    new GrammarType({ dot: 1, key: "Fcs.Process", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Process.LaunchExe", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Process.Function", kind: GrammarKind.Function }),


    new GrammarType({ dot: 1, key: "Fcs.Types", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Types.Array", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Types.IndexPath", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Types.ObjectLazyMap", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Types.ObjectMap", kind: GrammarKind.Function }),


    new GrammarType({ dot: 1, key: "Fcs.Analysis", kind: GrammarKind.Module }),

    new GrammarType({ dot: 2, key: "Fcs.Analysis.Result", kind: GrammarKind.Module }),

    new GrammarType({ dot: 3, key: "Fcs.Analysis.Result.BeamDeflection", kind: GrammarKind.Module }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.BeamDeflection.Uy", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.BeamDeflection.Uz", kind: GrammarKind.Constant }),

    new GrammarType({ dot: 3, key: "Fcs.Analysis.Result.Displacement", kind: GrammarKind.Module }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Displacement.X", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Displacement.Y", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Displacement.Z", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Displacement.Total", kind: GrammarKind.Constant }),

    new GrammarType({ dot: 3, key: "Fcs.Analysis.Result.Rotation", kind: GrammarKind.Module }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Rotation.X", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Rotation.Y", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Rotation.Z", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Rotation.Total", kind: GrammarKind.Constant }),

    new GrammarType({ dot: 3, key: "Fcs.Analysis.Result.Stress", kind: GrammarKind.Module }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Stress.sx", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Stress.MaxFibreSX", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Stress.MinFibreSX", kind: GrammarKind.Constant }),

    new GrammarType({ dot: 3, key: "Fcs.Analysis.Result.BeamInternalForce", kind: GrammarKind.Module }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.BeamInternalForce.sx", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.BeamInternalForce.MaxFibreSX", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.BeamInternalForce.MinFibreSX", kind: GrammarKind.Constant }),

    new GrammarType({ dot: 3, key: "Fcs.Analysis.Result.Beam", kind: GrammarKind.Module }),

    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Beam.N", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Beam.Vy", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Beam.Vz", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Beam.Mx", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Beam.My", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Beam.Mz", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Beam.Vu", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Beam.Vv", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Beam.Mu", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Beam.Mv", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Beam.My_mid", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Beam.Mz_mid", kind: GrammarKind.Constant }),

    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Beam.Central", kind: GrammarKind.Module }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Central.N", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Central.Vy", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Central.Vz", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Central.Mx", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Central.My", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Central.Mz", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Central.My_mid", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Central.Mz_mid", kind: GrammarKind.Constant }),

    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Beam.Principal", kind: GrammarKind.Module }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Principal.N", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Principal.Mx", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Principal.Vu", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Principal.Vv", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Principal.Mu", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Principal.Mv", kind: GrammarKind.Constant }),

    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Beam.Local", kind: GrammarKind.Module }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Local.N", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Local.Vy", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Local.Vz", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Local.Mx", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Local.My", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Local.Mz", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Local.Vu", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Local.Vv", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Local.Mu", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Local.Mv", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Local.My_mid", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Local.Mz_mid", kind: GrammarKind.Constant }),

    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Beam.Reference", kind: GrammarKind.Module }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Reference.N", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Reference.Mx", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Reference.Vu", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Reference.Vv", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Reference.Mu", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 5, key: "Fcs.Analysis.Result.Beam.Reference.Mv", kind: GrammarKind.Constant }),

    new GrammarType({ dot: 3, key: "Fcs.Analysis.Result.Shell", kind: GrammarKind.Module }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Shell.nx", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Shell.ny", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Shell.nxy", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Shell.mx", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Shell.my", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Shell.mxy", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Shell.vx", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Shell.vy", kind: GrammarKind.Constant }),

    new GrammarType({ dot: 3, key: "Fcs.Analysis.Result.Wall", kind: GrammarKind.Module }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Wall.nx", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Wall.ny", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Wall.nxy", kind: GrammarKind.Constant }),

    new GrammarType({ dot: 3, key: "Fcs.Analysis.Result.Reactions", kind: GrammarKind.Module }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Reactions.NodalForceX", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Reactions.NodalForceY", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Reactions.NodalForceZ", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Reactions.NodalMomentX", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Reactions.NodalMomentY", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 4, key: "Fcs.Analysis.Result.Reactions.NodalMomentZ", kind: GrammarKind.Constant }),

    new GrammarType({ dot: 2, key: "Fcs.Analysis.BeamSection", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Analysis.BeamSection.CharacteristicsSolver", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Analysis.MemberExtremes", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Analysis.MemberExtremes.Empty", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 3, key: "Fcs.Analysis.MemberExtremes.Merge", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.Analysis.ResultCase", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Analysis.Monitor", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Analysis.ResultMonitor.New", kind: GrammarKind.Function }),


    new GrammarType({ dot: 1, key: "Fcs.Action", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Action.Class", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Action.LoadCase", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Action.LoadCombination", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Action.ResultClass", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Action.EnvelopeContext", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Action.Exploder", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Action.Exploder.ExplodeEnvelope", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Action.Exploder.ExplodeEnvelopeTerminalGroups", kind: GrammarKind.Function }),


    new GrammarType({ dot: 1, key: "Fcs.Design", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Design.LimitState", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Design.LimitState.ULS", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 3, key: "Fcs.Design.LimitState.SLS", kind: GrammarKind.Constant }),
    // new GrammarType({ dot: 3, key: "Fcs.Design.LimitState.Undefined", kind: GrammarKind.Constant }),


    new GrammarType({ dot: 1, key: "Fcs.Ifc", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Ifc.ExportGeometry", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Ifc.ExportFixedGeometry", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Ifc.ExportLoopAsIfcPolyLine", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Ifc.GenerateNewIfcGuid", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Ifc.GenerateNewGuidInBase64", kind: GrammarKind.Function }),
    new GrammarType({ dot: 2, key: "Fcs.Ifc.GenerateTimeStampUnixTimeSeconds", kind: GrammarKind.Function }),


    new GrammarType({ dot: 1, key: "Fcs.Presentation", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Presentation.DxfUpdateRenderer", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Presentation.ImageRenderer", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Presentation.ImageUpdateRenderer", kind: GrammarKind.Object }),


    new GrammarType({ dot: 1, key: "Fcs.Dxf", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.Dxf.DefaultSettings", kind: GrammarKind.Constant }),


    new GrammarType({ dot: 1, key: "Fcs.SteelLib", kind: GrammarKind.Module }),

    new GrammarType({ dot: 2, key: "Fcs.SteelLib.Design", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Design.BendingAxial.RunBendingAxialCheck", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Design.Buckling.RunBucklingCheckY", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Design.Buckling.RunBucklingCheckZ", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Design.Compression.RunCompressionCheck", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Design.Moment.RunMomentAxisCheck", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Design.Moment.RunMomentCheck", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Design.Shear.RunShearCheckY", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Design.Shear.RunShearCheckZ", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Design.Tension.RunTensionCheck", kind: GrammarKind.Function }),

    new GrammarType({ dot: 2, key: "Fcs.SteelLib.Sections", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.CircleSection.GetProperties", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.CircleSection.GetPropertiesCustomMaterial", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.CircleSection.GetPropertiesTube", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.CircleSection.GetPropertiesTubeCustomMaterial", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.Csection.GetProperties", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.Csection.GetPropertiesCustomMaterial", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.IpeSection.GetProperties", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.IpeSection.GetPropertiesCustomMateria", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.Materials.CreateNormalMaterialProperties", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.Properties.ByName", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.RectangleSection.GetProperties", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.RectangleSection.GetPropertiesCustomMaterial", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.RibSection.GetProperties", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.RibSection.GetPropertiesWithZet", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.Shape.GetZet", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.ThinSection.CombineGeometries", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.ThinSection.GetProperties", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.ThinSection.Reflection", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.UniversalThinSection.CreateGeometry", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.UniversalThinSection.CreateGeometryCustomMaterial", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.UniversalThinSection.CreateSection", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.UniversalThinSection.GetPropertiesCC12", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.UniversalThinSection.GetPropertiesCC30", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.UniversalThinSection.GetPropertiesLee", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.UniversalThinSection.GetPropertiesLeeCustomMaterial", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.UniversalThinSection.GetPropertiesRhs", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.UniversalThinSection.GetPropertiesRhsCustomMaterial", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.UniversalThinSection.GetPropertiesStiffener", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.UniversalThinSection.GetPropertiesStiffenerLam", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.UniversalThinSection.GetSectionStiffener", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.Usection.GetProperties", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.Usection.GetPropertiesCustomMaterial", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.Zsection.GetProperties", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.Zsection.GetPropertiesLaminate", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.Zsection.GetSection", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.SteelLib.Sections.Zsection.GetSectionCustomMaterial", kind: GrammarKind.Function }),


    new GrammarType({ dot: 1, key: "Fcs.IntensitySystem", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.IntensitySystem.WorldGcs", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.IntensitySystem.Gcs", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.IntensitySystem.LoadLcs", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.IntensitySystem.SurfaceLcs", kind: GrammarKind.Constant }),


    new GrammarType({ dot: 1, key: "Fcs.CssAlignment", kind: GrammarKind.Module }),
    new GrammarType({ dot: 2, key: "Fcs.CssAlignment.None", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.CssAlignment.TopLeft", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.CssAlignment.Top", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.CssAlignment.TopRight", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.CssAlignment.Left", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.CssAlignment.Centre", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.CssAlignment.Right", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.CssAlignment.BottomLeft", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.CssAlignment.Bottom", kind: GrammarKind.Constant }),
    new GrammarType({ dot: 2, key: "Fcs.CssAlignment.BottomRight", kind: GrammarKind.Constant }),

    
    new GrammarType({ dot: 1, key: "Fcs.Beam", kind: GrammarKind.Module }),

    new GrammarType({ dot: 2, key: "Fcs.Beam.Hinges", kind: GrammarKind.Object }),
    new GrammarType({ dot: 2, key: "Fcs.Beam.Hinges.None", kind: GrammarKind.Property }),
    new GrammarType({ dot: 2, key: "Fcs.Beam.Hinges.Braces", kind: GrammarKind.Property }),

    new GrammarType({ dot: 2, key: "Fcs.Beam.Hinge", kind: GrammarKind.Module }),
    new GrammarType({ dot: 3, key: "Fcs.Beam.Hinge.None", kind: GrammarKind.Property }),
    new GrammarType({ dot: 3, key: "Fcs.Beam.Hinge.Full", kind: GrammarKind.Property }),
    new GrammarType({ dot: 3, key: "Fcs.Beam.Hinge.Bend", kind: GrammarKind.Property }),
    new GrammarType({ dot: 3, key: "Fcs.Beam.Hinge.Nx", kind: GrammarKind.Property }),
    new GrammarType({ dot: 3, key: "Fcs.Beam.Hinge.Vy", kind: GrammarKind.Property }),
    new GrammarType({ dot: 3, key: "Fcs.Beam.Hinge.Vz", kind: GrammarKind.Property }),
    new GrammarType({ dot: 3, key: "Fcs.Beam.Hinge.Mx", kind: GrammarKind.Property }),
    new GrammarType({ dot: 3, key: "Fcs.Beam.Hinge.My", kind: GrammarKind.Property }),
    new GrammarType({ dot: 3, key: "Fcs.Beam.Hinge.Mz", kind: GrammarKind.Property }),
    new GrammarType({ dot: 3, key: "Fcs.Beam.Hinge.SemiNx", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Beam.Hinge.SemiVy", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Beam.Hinge.SemiVz", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Beam.Hinge.SemiMx", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Beam.Hinge.SemiMy", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Beam.Hinge.SemiMz", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Beam.Hinge.FreeRotation", kind: GrammarKind.Function }),
    new GrammarType({ dot: 3, key: "Fcs.Beam.Hinge.General", kind: GrammarKind.Function }),

    new GrammarType({ dot: 3, key: "Fcs.Beam.Hinge.Dof", kind: GrammarKind.Module }),
    new GrammarType({ dot: 4, key: "Fcs.Beam.Hinge.Dof.Free", kind: GrammarKind.Property }),
    new GrammarType({ dot: 4, key: "Fcs.Beam.Hinge.Dof.Stiff", kind: GrammarKind.Property }),
    new GrammarType({ dot: 4, key: "Fcs.Beam.Hinge.Dof.Semistiff", kind: GrammarKind.Function }),
]